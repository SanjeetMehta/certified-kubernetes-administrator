There are 2 types of accounts in k8s, a user account and a service account.

user accounts: These are used by humans, it could be for admin acces, or developer access, etc.
service accounts: These are used by machines, it could be account used by an application to interact with k8s cluster, for eg: monitoring application like prometheus uses a service account
    to pull the k8s api for performance metrics.

    It has a token which is used by the external applications while authenticating to the k8s api. Token is stored as a secret object.
    When a service account is created, it first creates a service account object and generates a token for the servie account.
    It then creates a secrets object and stores that token in it.
    Secret object is linked to the SA.
    This token can be used as authentication bearer token while making call to k8s rest API.

    Every namespace has a default SA, whenever a pod is created the default SA and its token are automatically mounted to that pod
    as a volume mount.

    To use a different serviceAccount add attribute "serviceAccountName" to the pod.
kubectl commands:
    kubectl create serviceaccount <service_account_name>
    kubectl get serviceaccount
    kubectl describe serviceaccount <service_account_name>